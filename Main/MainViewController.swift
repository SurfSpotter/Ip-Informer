//
//  ViewController.swift
//  IpLocationFinder
//
//  Created by –ê–ª–µ–∫—Å–µ–π –ß–∏–≥–∞—Ä—Å–∫–∏—Ö on 01.06.2020.
//  Copyright ¬© 2020 –ê–ª–µ–∫—Å–µ–π –ß–∏–≥–∞—Ä—Å–∫–∏—Ö. All rights reserved.
// –°–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç —Ñ–∏–ª–¥ –¥–ª—è –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞
// –°–¥–µ–ª–∞—Ç—å –ø–æ–ª—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ +
// –°–¥–µ–ª–∞—Ç—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ +
// –°–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ"
// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
// –í—å—é –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –∫–∞—Ä—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥



import UIKit
import Alamofire



   

@IBDesignable class MainViewController: UIViewController {
    
    
    
    @IBOutlet weak var ipTFOut: UITextField!
    @IBOutlet weak var regionOut: UILabel!
    @IBOutlet weak var countryOut: UILabel!
    @IBOutlet weak var cityOut: UILabel!
    @IBOutlet weak  var infoLabelMain: UILabel!
    @IBOutlet weak  var showMapButtonOut: UIButton!
    @IBOutlet weak  var countryLbl: UILabel!
    @IBOutlet weak  var regionLbl: UILabel!
    @IBOutlet weak  var cityLbl: UILabel!
    
    
   
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
       // showUiElements(state: .hide)
       
anchorsShowMapButtonOut()
anchorsInfoLabelMain()
anchorsipTFOut()
    
  
    }
    
    @IBAction func searchBtnAct(_ sender: Any) {
        
        // –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω–µ, –≤–∫–∏–¥–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏
        if ipTFOut.text != "" {
            
            // –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –∞–π–ø–∏ –∞–¥—Ä–µ—Å–µ
            let characterset = CharacterSet(charactersIn: " 0123456789.")
            if ipTFOut.text!.rangeOfCharacter(from: characterset.inverted) != nil {
                self.showUiElements(state: .hide)
                self.infoLabelMain.text = "üôÖüèæ‚Äç‚ôÇÔ∏èYou entered invalid characters üôÖ‚Äç‚ôÄÔ∏è"
                return
            }
            
            // –°–µ—Ç–µ–≤–æ–π –∑–∞–ø—Ä–æ—Å
            IpLocationNetworkService.getIpInfo(ip: ipTFOut.text!) { (json) in
                   let re = GetResponse(json: json)
                       searchResults = SearchResults(dict: re.finalJsonFile)
                       if searchResults != nil {
                        self.countryOut.text = searchResults!.emoji + " " + searchResults!.country
                        self.regionOut.text = searchResults?.region
                        self.cityOut.text = searchResults?.city
                        self.infoLabelMain.text = "ü•≥ Success! ü•≥  "
                        self.showUiElements(state: .show)
                       } else {
                        
                        self.infoLabelMain.text = """
                        
                        Sorry, we did not find
                        information about this address.
                        üòê
                        """
                        self.infoLabelMain.textAlignment = .center
                        self.showUiElements(state: .hide)
                        
                       }
                   }
            
            
            
            ipTFOut.resignFirstResponder() // –£–±–∏—Ä–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å view
            
            
        } else {
            self.showAlert(title: "Write IP adress!", message: "") {
            self.infoLabelMain.text = "üëáWrite Ip adress hereüëá"
            self.showUiElements(state: .hide)
            }
        }

        
    }
    
    @IBAction func showMapAct(_ sender: Any) {
        // –ø–µ—Ä–µ—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ Storyboard
        
    }
    
   

    
    
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã–≤–∞–µ—Ç –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã UI
    func showUiElements(state: showOrHide) {
        
        switch state {
        case .hide :
        regionOut.isHidden = true
        countryOut.isHidden = true
        cityOut.isHidden = true
        showMapButtonOut.isHidden = true
        countryLbl.isHidden = true
        regionLbl.isHidden = true
        cityLbl.isHidden = true
            
            
        case .show :
           
            regionOut.isHidden = false
            countryOut.isHidden = false
            cityOut.isHidden = false
            showMapButtonOut.isHidden = false
            countryLbl.isHidden = false
            regionLbl.isHidden = false
            cityLbl.isHidden = false
        }
        
        
    }
    
    
    //MARK: - Constraints
 
    lazy var mView = view.layoutMarginsGuide
    
    func anchorsShowMapButtonOut() {
        showMapButtonOut.translatesAutoresizingMaskIntoConstraints = false
        showMapButtonOut.widthAnchor.constraint(equalTo: view.widthAnchor, multiplier: 0.45).isActive = true
        showMapButtonOut.heightAnchor.constraint(equalToConstant: 50.0).isActive = true
        showMapButtonOut.bottomAnchor.constraint(equalTo: mView.bottomAnchor, constant: -30.0).isActive = true
        showMapButtonOut.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
    }
    
    func anchorsInfoLabelMain() {
        infoLabelMain.translatesAutoresizingMaskIntoConstraints = false
        infoLabelMain.widthAnchor.constraint(equalTo: view.widthAnchor, multiplier: 0.9).isActive = true
        infoLabelMain.heightAnchor.constraint(equalTo: mView.heightAnchor, multiplier: 0.15 ).isActive = true
        infoLabelMain.topAnchor.constraint(equalTo: mView.topAnchor, constant: 10.0).isActive = true
        infoLabelMain.centerXAnchor.constraint(equalTo: mView.centerXAnchor).isActive = true
        infoLabelMain.backgroundColor = .blue
        infoLabelMain.adjustsFontSizeToFitWidth = true
    }
    
    func anchorsipTFOut() {
           ipTFOut.translatesAutoresizingMaskIntoConstraints = false
           ipTFOut.widthAnchor.constraint(equalTo: view.widthAnchor, multiplier: 0.5).isActive = true
        ipTFOut.heightAnchor.constraint(equalToConstant: 40.0).isActive = true
        ipTFOut.topAnchor.constraint(equalTo: infoLabelMain.bottomAnchor, constant: 10.0).isActive = true
           ipTFOut.centerXAnchor.constraint(equalTo: mView.centerXAnchor).isActive = true
           ipTFOut.backgroundColor = .blue
           ipTFOut.adjustsFontSizeToFitWidth = true
       }
    
}


